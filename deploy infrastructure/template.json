{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "subscriptionid": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]"
        },
        "name": {
            "type": "string"
        },
        "webapp2name": {
            "type": "string"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourcegroup().location]"
        },
        "FrontDoorlocation": {
            "type": "string"
        },
        "hostingPlanName": {
            "type": "string"
        },
        "ResourceGroup": {
            "type": "string"
        },
        "alwaysOn": {
            "type": "bool"
        },
        "sku": {
            "type": "string"
        },
        "skuCode": {
            "type": "string"
        },
        "workerSize": {
            "type": "string"
        },
        "workerSizeId": {
            "type": "string"
        },
        "numberOfWorkers": {
            "type": "string"
        },
        "currentStack": {
            "type": "string"
        },
        "phpVersion": {
            "type": "string"
        },
        "wafresourceName": {
            "type": "string",
            "metadata": {
                "description": "The name of the resource."
            }
        },
        "frontDoorName": {
            "type": "string",
            "metadata": {
                "description": "The name of the frontdoor resource."
            }
        },
        "workspaceName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Log Analytics workspace"
            }
        },
        "frontendEndpointName": {
            "type": "string"
        },
        "frontendEndpointHostname": {
            "type": "string"
        },
        "backendPoolName1": {
            "type": "string"
        },
        "backendAddress1": {
            "type": "string"
        },
        "backendAddress2": {
            "type": "string"
        },
        "routingRule1": {
            "type": "string"
        },
        "healthProbeSetting1": {
            "type": "string"
        },
        "loadBalancingSetting1": {
            "type": "string"
        },
        "insightsName": {
            "type": "string"
        },
        "workspaceSku": {
            "type": "string"
        },
        "wafPolicyName": {
            "type": "string"
        },
        "errorLink": {
            "type": "string"
        }
    },
    "variables": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]",
        "frontDoorId": "[resourceId('Microsoft.Network/frontdoors/', parameters('frontDoorName'))]"
    },
    "resources": [
        {
            "apiVersion": "2018-11-01",
            "name": "[parameters('name')]",
            "type": "Microsoft.Web/sites",
            "location": "[parameters('location')]",
            "tags": {},
            "dependsOn": [
                "[concat('microsoft.insights/components/', parameters('insightsName'))]",
                "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
            ],
            "properties": {
                "name": "[parameters('name')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference('microsoft.insights/components/zaz-webapp-ex01', '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference('microsoft.insights/components/zaz-webapp-ex01', '2015-05-01').ConnectionString]"
                        },
                        {
                            "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "XDT_MicrosoftApplicationInsights_Mode",
                            "value": "default"
                        },
                        {
                            "name": "ANCM_ADDITIONAL_ERROR_PAGE_LINK",
                            "value": "[parameters('errorLink')]"
                        }
                    ],
                    "metadata": [
                        {
                            "name": "CURRENT_STACK",
                            "value": "[parameters('currentStack')]"
                        }
                    ],
                    "phpVersion": "[parameters('phpVersion')]",
                    "alwaysOn": "[parameters('alwaysOn')]"
                },
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                "clientAffinityEnabled": true
            }
        },
        {
            "type": "Microsoft.Network/frontdoors/providers/diagnosticsettings",
            "name": "[concat(parameters('frontDoorName'), '/Microsoft.Insights/service')]",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('frontDoorId')]",
                "[variables('workspaceId')]"
            ],
            "properties": {
                "workspaceId": "[variables('workspaceId')]",
                "logs": [
                    {
                        "category": "FrontdoorAccessLog",
                        "enabled": true,
                        "retentionPolicy": {
                            "enabled": true,
                            "days": 0
                        }
                    },
                    {
                        "category": "FrontdoorWebApplicationFirewallLog",
                        "enabled": true,
                        "retentionPolicy": {
                            "enabled": true,
                            "days": 0
                        }
                    }
                ],
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "timeGrain": "PT1M",
                        "enabled": true,
                        "retentionPolicy": {
                            "enabled": false,
                            "days": 0
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-03-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces",
            "name": "[parameters('workspaceName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "[parameters('workspaceSku')]"
                }
            },
            "resources": []
        },
        {
            "apiVersion": "2018-11-01",
            "name": "[parameters('webapp2name')]",
            "type": "Microsoft.Web/sites",
            "location": "[parameters('location')]",
            "tags": {},
            "dependsOn": [
                "[concat('microsoft.insights/components/', parameters('insightsName'))]",
                "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
            ],
            "properties": {
                "name": "[parameters('webapp2name')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference('microsoft.insights/components/zaz-webapp-ex01', '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference('microsoft.insights/components/zaz-webapp-ex01', '2015-05-01').ConnectionString]"
                        },
                        {
                            "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "XDT_MicrosoftApplicationInsights_Mode",
                            "value": "default"
                        },
                        {
                            "name": "ANCM_ADDITIONAL_ERROR_PAGE_LINK",
                            "value": "[parameters('errorLink')]"
                        }
                    ],
                    "metadata": [
                        {
                            "name": "CURRENT_STACK",
                            "value": "[parameters('currentStack')]"
                        }
                    ],
                    "phpVersion": "[parameters('phpVersion')]",
                    "alwaysOn": "[parameters('alwaysOn')]"
                },
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
                "clientAffinityEnabled": true
            }
        },
        {
            "apiVersion": "2018-11-01",
            "name": "[parameters('hostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[parameters('location')]",
            "kind": "",
            "tags": {},
            "dependsOn": [],
            "properties": {
                "name": "[parameters('hostingPlanName')]",
                "workerSize": "[parameters('workerSize')]",
                "workerSizeId": "[parameters('workerSizeId')]",
                "numberOfWorkers": "[parameters('numberOfWorkers')]"
            },
            "sku": {
                "Tier": "[parameters('sku')]",
                "Name": "[parameters('skuCode')]"
            }
        },
        {
            "apiVersion": "2015-05-01",
            "name": "[parameters('insightsName')]",
            "type": "microsoft.insights/components",
            "location": "eastus",
            "tags": {},
            "properties": {
                "ApplicationId": "[parameters('name')]",
                "Request_Source": "IbizaWebAppExtensionCreate"
            }
        },
        {
            "dependsOn": [
                "[resourceId('Microsoft.Network/frontDoorWebApplicationFirewallPolicies', parameters('wafresourceName'))]"
            ],
            "apiVersion": "2020-01-01",
            "type": "Microsoft.Network/frontdoors",
            "name": "[parameters('frontDoorName')]",
            "location": "[parameters('FrontDoorlocation')]",
            "tags": {},
            "properties": {
                "friendlyName": "[parameters('frontDoorName')]",
                "enabledState": "Enabled",
                "healthProbeSettings": [
                    {
                        "name": "[parameters('healthProbeSetting1')]",
                        "properties": {
                            "path": "/",
                            "protocol": "Https",
                            "intervalInSeconds": 30,
                            "healthProbeMethod": "Head",
                            "enabledState": "Enabled"
                        },
                        "id": "[resourceId('Microsoft.Network/frontdoors/healthProbeSettings', parameters('frontDoorName'), parameters('healthProbeSetting1'))]"
                    }
                ],
                "loadBalancingSettings": [
                    {
                        "name": "[parameters('loadBalancingSetting1')]",
                        "properties": {
                            "sampleSize": 4,
                            "successfulSamplesRequired": 2,
                            "additionalLatencyMilliseconds": 0
                        },
                        "id": "[resourceId('Microsoft.Network/frontdoors/loadBalancingSettings', parameters('frontDoorName'), parameters('loadBalancingSetting1'))]"
                    }
                ],
                "frontendEndpoints": [
                    {
                        "name": "[parameters('frontendEndpointName')]",
                        "properties": {
                            "hostName": "[parameters('frontendEndpointHostname')]",
                            "sessionAffinityEnabledState": "Enabled",
                            "sessionAffinityTtlSeconds": 0,
                            "webApplicationFirewallPolicyLink": {
                                "id": "[resourceId('Microsoft.Network/frontdoorwebapplicationfirewallpolicies', parameters('wafPolicyName'))]"
                            },
                            "customHttpsConfiguration": null
                        },
                        "id": "[resourceId('Microsoft.Network/frontdoors/frontendEndpoints', parameters('frontDoorName') , parameters('frontendEndpointName'))]"
                    }
                ],
                "backendPools": [
                    {
                        "name": "[parameters('backendPoolName1')]",
                        "properties": {
                            "backends": [
                                {
                                    "address": "[parameters('backendAddress1')]",
                                    "enabledState": "Enabled",
                                    "httpPort": 80,
                                    "httpsPort": 443,
                                    "priority": 1,
                                    "weight": 50,
                                    "backendHostHeader": "[parameters('backendAddress1')]"
                                },
                                {
                                    "address": "[parameters('backendAddress2')]",
                                    "enabledState": "Enabled",
                                    "httpPort": 80,
                                    "httpsPort": 443,
                                    "priority": 1,
                                    "weight": 50,
                                    "backendHostHeader": "[parameters('backendAddress2')]"
                                }
                            ],
                            "loadBalancingSettings": {
                                "id": "[resourceId('Microsoft.Network/frontdoors/loadBalancingSettings', parameters('frontDoorName'), parameters('loadBalancingSetting1'))]"
                            },
                            "healthProbeSettings": {
                                "id": "[resourceId('Microsoft.Network/frontdoors/healthProbeSettings', parameters('frontDoorName'), parameters('healthProbeSetting1'))]"
                            }
                        },
                        "id": "[resourceId('Microsoft.Network/frontdoors/backendPools', parameters('frontDoorName'), parameters('backendPoolName1'))]"
                    }
                ],
                "routingRules": [
                    {
                        "name": "[parameters('routingRule1')]",
                        "properties": {
                            "frontendEndpoints": [
                                {
                                    "id": "[resourceId('Microsoft.Network/frontdoors/frontendEndpoints', parameters('frontDoorName'), parameters('frontendEndpointName'))]"
                                }
                            ],
                            "acceptedProtocols": [
                                "Http",
                                "Https"
                            ],
                            "patternsToMatch": [
                                "/*"
                            ],
                            "enabledState": "Enabled",
                            "routeConfiguration": {
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                                "customForwardingPath": null,
                                "forwardingProtocol": "MatchRequest",
                                "backendPool": {
                                    "id": "[resourceId('Microsoft.Network/frontdoors/backendPools', parameters('frontDoorName'), parameters('backendPoolName1'))]"
                                },
                                "cacheConfiguration": null
                            }
                        },
                        "id": "[resourceId('Microsoft.Network/frontdoors/routingRules', parameters('frontDoorName'), parameters('routingRule1'))]"
                    }
                ],
                "backendPoolsSettings": {
                    "enforceCertificateNameCheck": "Enabled",
                    "sendRecvTimeoutSeconds": 30
                }
            }
        },
        {
            "apiVersion": "2020-04-01",
            "type": "Microsoft.Network/frontDoorWebApplicationFirewallPolicies",
            "name": "[parameters('wafresourceName')]",
            "location": "[parameters('FrontDoorlocation')]",
            "tags": {},
            "properties": {
                "policySettings": {
                    "enabledState": "Enabled",
                    "mode": "Prevention",
                    "redirectUrl": null,
                    "customBlockResponseStatusCode": 403,
                    "customBlockResponseBody": null
                },
                "customRules": {
                    "rules": [
                        {
                            "name": "wafcustomr01",
                            "priority": 10,
                            "enabledState": "Enabled",
                            "ruleType": "MatchRule",
                            "rateLimitDurationInMinutes": 1,
                            "rateLimitThreshold": 100,
                            "matchConditions": [
                                {
                                    "matchVariable": "RemoteAddr",
                                    "selector": null,
                                    "operator": "GeoMatch",
                                    "negateCondition": false,
                                    "matchValue": [
                                        "GB"
                                    ],
                                    "transforms": []
                                }
                            ],
                            "action": "Block"
                        }
                    ]
                },
                "managedRules": {
                    "managedRuleSets": [
                        {
                            "ruleSetType": "DefaultRuleSet",
                            "ruleSetVersion": "1.0",
                            "ruleGroupOverrides": [],
                            "exclusions": []
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "resourceID": {
            "type": "string",
            "value": "[variables('frontDoorId')]"
        }
    }
}